import spacy
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np

# Load transformer model
nlp = spacy.load("en_core_web_trf")

# Sample categories
categories = [
    "Login Issue",
    "Payment Failure",
    "Password Reset",
    "Account Locked",
    "Subscription Cancellation",
    "App Crash",
    "Slow Performance",
    "UI Bug",
    "Feature Request",
    "Billing Query"
]

# Sample ticket description
ticket_descriptions = [
    "I'm unable to sign into my account using my email",
    "App is freezing whenever I open the dashboard",
    "Need to stop my monthly charges",
    "Can't remember my password",
    "Charged twice for the same subscription"
]

# Convert category headers to spaCy docs and extract vector
category_docs = [nlp(cat) for cat in categories]
category_vectors = np.array([doc.vector for doc in category_docs])

for ticket in ticket_descriptions:
    ticket_doc = nlp(ticket)
    ticket_vector = ticket_doc.vector.reshape(1, -1)
    
    # Calculate cosine similarities
    sims = cosine_similarity(ticket_vector, category_vectors).flatten()
    
    # Get top 5 categories
    top5_indices = sims.argsort()[-5:][::-1]
    print(f"\nTicket: '{ticket}'")
    print("Top 5 matching categories:")
    for i in top5_indices:
        print(f"  - {categories[i]} (score: {sims[i]:.4f})")
